{"version":3,"file":"static/js/333.0189464c.chunk.js","mappings":"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","sources":["../../../node_modules/@capacitor/camera/src/web.ts"],"sourcesContent":["import { WebPlugin, CapacitorException } from '@capacitor/core';\n\nimport { CameraSource, CameraDirection } from './definitions';\nimport type {\n  CameraPlugin,\n  GalleryImageOptions,\n  GalleryPhotos,\n  ImageOptions,\n  PermissionStatus,\n  Photo,\n} from './definitions';\n\nexport class CameraWeb extends WebPlugin implements CameraPlugin {\n  async getPhoto(options: ImageOptions): Promise<Photo> {\n    // eslint-disable-next-line no-async-promise-executor\n    return new Promise<Photo>(async (resolve, reject) => {\n      if (options.webUseInput || options.source === CameraSource.Photos) {\n        this.fileInputExperience(options, resolve);\n      } else if (options.source === CameraSource.Prompt) {\n        let actionSheet: any = document.querySelector('pwa-action-sheet');\n        if (!actionSheet) {\n          actionSheet = document.createElement('pwa-action-sheet');\n          document.body.appendChild(actionSheet);\n        }\n        actionSheet.header = options.promptLabelHeader || 'Photo';\n        actionSheet.cancelable = false;\n        actionSheet.options = [\n          { title: options.promptLabelPhoto || 'From Photos' },\n          { title: options.promptLabelPicture || 'Take Picture' },\n        ];\n        actionSheet.addEventListener('onSelection', async (e: any) => {\n          const selection = e.detail;\n          if (selection === 0) {\n            this.fileInputExperience(options, resolve);\n          } else {\n            this.cameraExperience(options, resolve, reject);\n          }\n        });\n      } else {\n        this.cameraExperience(options, resolve, reject);\n      }\n    });\n  }\n\n  async pickImages(_options: GalleryImageOptions): Promise<GalleryPhotos> {\n    // eslint-disable-next-line no-async-promise-executor\n    return new Promise<GalleryPhotos>(async resolve => {\n      this.multipleFileInputExperience(resolve);\n    });\n  }\n\n  private async cameraExperience(\n    options: ImageOptions,\n    resolve: any,\n    reject: any,\n  ) {\n    if (customElements.get('pwa-camera-modal')) {\n      const cameraModal: any = document.createElement('pwa-camera-modal');\n      cameraModal.facingMode =\n        options.direction === CameraDirection.Front ? 'user' : 'environment';\n      document.body.appendChild(cameraModal);\n      try {\n        await cameraModal.componentOnReady();\n        cameraModal.addEventListener('onPhoto', async (e: any) => {\n          const photo = e.detail;\n\n          if (photo === null) {\n            reject(new CapacitorException('User cancelled photos app'));\n          } else if (photo instanceof Error) {\n            reject(photo);\n          } else {\n            resolve(await this._getCameraPhoto(photo, options));\n          }\n\n          cameraModal.dismiss();\n          document.body.removeChild(cameraModal);\n        });\n\n        cameraModal.present();\n      } catch (e) {\n        this.fileInputExperience(options, resolve);\n      }\n    } else {\n      console.error(\n        `Unable to load PWA Element 'pwa-camera-modal'. See the docs: https://capacitorjs.com/docs/web/pwa-elements.`,\n      );\n      this.fileInputExperience(options, resolve);\n    }\n  }\n\n  private fileInputExperience(options: ImageOptions, resolve: any) {\n    let input = document.querySelector(\n      '#_capacitor-camera-input',\n    ) as HTMLInputElement;\n\n    const cleanup = () => {\n      input.parentNode?.removeChild(input);\n    };\n\n    if (!input) {\n      input = document.createElement('input') as HTMLInputElement;\n      input.id = '_capacitor-camera-input';\n      input.type = 'file';\n      input.hidden = true;\n      document.body.appendChild(input);\n      input.addEventListener('change', (_e: any) => {\n        const file = input.files![0];\n        let format = 'jpeg';\n\n        if (file.type === 'image/png') {\n          format = 'png';\n        } else if (file.type === 'image/gif') {\n          format = 'gif';\n        }\n\n        if (\n          options.resultType === 'dataUrl' ||\n          options.resultType === 'base64'\n        ) {\n          const reader = new FileReader();\n\n          reader.addEventListener('load', () => {\n            if (options.resultType === 'dataUrl') {\n              resolve({\n                dataUrl: reader.result,\n                format,\n              } as Photo);\n            } else if (options.resultType === 'base64') {\n              const b64 = (reader.result as string).split(',')[1];\n              resolve({\n                base64String: b64,\n                format,\n              } as Photo);\n            }\n\n            cleanup();\n          });\n\n          reader.readAsDataURL(file);\n        } else {\n          resolve({\n            webPath: URL.createObjectURL(file),\n            format: format,\n          });\n          cleanup();\n        }\n      });\n    }\n\n    input.accept = 'image/*';\n    (input as any).capture = true;\n\n    if (\n      options.source === CameraSource.Photos ||\n      options.source === CameraSource.Prompt\n    ) {\n      input.removeAttribute('capture');\n    } else if (options.direction === CameraDirection.Front) {\n      (input as any).capture = 'user';\n    } else if (options.direction === CameraDirection.Rear) {\n      (input as any).capture = 'environment';\n    }\n\n    input.click();\n  }\n\n  private multipleFileInputExperience(resolve: any) {\n    let input = document.querySelector(\n      '#_capacitor-camera-input-multiple',\n    ) as HTMLInputElement;\n\n    const cleanup = () => {\n      input.parentNode?.removeChild(input);\n    };\n\n    if (!input) {\n      input = document.createElement('input') as HTMLInputElement;\n      input.id = '_capacitor-camera-input-multiple';\n      input.type = 'file';\n      input.hidden = true;\n      input.multiple = true;\n      document.body.appendChild(input);\n      input.addEventListener('change', (_e: any) => {\n        const photos = [];\n        // eslint-disable-next-line @typescript-eslint/prefer-for-of\n        for (let i = 0; i < input.files!.length; i++) {\n          const file = input.files![i];\n          let format = 'jpeg';\n\n          if (file.type === 'image/png') {\n            format = 'png';\n          } else if (file.type === 'image/gif') {\n            format = 'gif';\n          }\n          photos.push({\n            webPath: URL.createObjectURL(file),\n            format: format,\n          });\n        }\n        resolve({ photos });\n        cleanup();\n      });\n    }\n\n    input.accept = 'image/*';\n\n    input.click();\n  }\n\n  private _getCameraPhoto(photo: Blob, options: ImageOptions) {\n    return new Promise<Photo>((resolve, reject) => {\n      const reader = new FileReader();\n      const format = photo.type.split('/')[1];\n      if (options.resultType === 'uri') {\n        resolve({\n          webPath: URL.createObjectURL(photo),\n          format: format,\n          saved: false,\n        });\n      } else {\n        reader.readAsDataURL(photo);\n        reader.onloadend = () => {\n          const r = reader.result as string;\n          if (options.resultType === 'dataUrl') {\n            resolve({\n              dataUrl: r,\n              format: format,\n              saved: false,\n            });\n          } else {\n            resolve({\n              base64String: r.split(',')[1],\n              format: format,\n              saved: false,\n            });\n          }\n        };\n        reader.onerror = e => {\n          reject(e);\n        };\n      }\n    });\n  }\n\n  async checkPermissions(): Promise<PermissionStatus> {\n    if (typeof navigator === 'undefined' || !navigator.permissions) {\n      throw this.unavailable('Permissions API not available in this browser');\n    }\n\n    try {\n      // https://developer.mozilla.org/en-US/docs/Web/API/Permissions/query\n      // the specific permissions that are supported varies among browsers that implement the\n      // permissions API, so we need a try/catch in case 'camera' is invalid\n      const permission = await window.navigator.permissions.query({\n        name: 'camera',\n      });\n      return {\n        camera: permission.state,\n        photos: 'granted',\n      };\n    } catch {\n      throw this.unavailable(\n        'Camera permissions are not available in this browser',\n      );\n    }\n  }\n\n  async requestPermissions(): Promise<PermissionStatus> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  async pickLimitedLibraryPhotos(): Promise<GalleryPhotos> {\n    throw this.unavailable('Not implemented on web.');\n  }\n\n  async getLimitedLibraryPhotos(): Promise<GalleryPhotos> {\n    throw this.unavailable('Not implemented on web.');\n  }\n}\n\nconst Camera = new CameraWeb();\n\nexport { Camera };\n"],"names":["CameraWeb","options","Promise","resolve","reject","webUseInput","source","CameraSource","fileInputExperience","actionSheet","document","querySelector","createElement","body","appendChild","header","promptLabelHeader","cancelable","title","promptLabelPhoto","promptLabelPicture","addEventListener","e","detail","cameraExperience","_options","multipleFileInputExperience","customElements","get","cameraModal","facingMode","direction","CameraDirection","componentOnReady","photo","CapacitorException","Error","_getCameraPhoto","dismiss","removeChild","present","this","console","error","input","cleanup","parentNode","_a","id","type","hidden","_e","file","files","format","resultType","reader","FileReader","dataUrl","result","b64","split","base64String","readAsDataURL","webPath","URL","createObjectURL","accept","capture","removeAttribute","click","multiple","photos","i","length","push","saved","onloadend","r","onerror","navigator","permissions","unavailable","window","query","name","permission","camera","state","unimplemented","WebPlugin","Camera"],"sourceRoot":""}